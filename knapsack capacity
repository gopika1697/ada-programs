#include<stdio.h>
#define MAX 20
int weight[MAX],profit[MAX],W,no,*x;
int v[MAX][MAX];

void knapsackDP(int no,int W)
{
 int i,j;

 for(i=0;i<= W ;i++)
  v[0][i]=0;

 for(i=0;i<= no;i++)
  v[i][0]=0;

 for(i=1;i<= no;i++)
 {
  for(j=1;j<= W;j++)
  {
   if((j-weight[i])< 0)
    v[i][j]=v[i-1][j];
   else
    v[i][j]=max(v[i-1][j],v[i-1][j-weight[i]]+profit[i]);
   }
 }
 printf("\n \t      ");
 for(i=0;i<= W;i++)
  printf("%2d  ",i);
 for(i=0;i<=no;i++)
 {
  printf("\n w%d=%2d v%d=%2d |",i,weight[i],i,profit[i]);
  for(j=0;j<= W;j++)
   printf("%2d  ",v[i][j]);

 }
  printf("\n Maximum value carry by knapsack is:%2d",v[no][W]);
 }

int max(int a,int b)
{
 return (a >b)?a:b;
}

void backtracking()
{

 int j1,i;
 j1=W;
 printf("\nIncluded Object \t weight \t value\n");
  for(i=no;i >=0;i--)
 {
                                               {
  if(v[i][j1]!=v[i-1][j1] && (v[i][j1]==v[i-1][j1-weight[i]]+profit[i]))
  {
   printf("%2d \t\t\t  %2d   \t\t %2d\n",i,weight[i],profit[i]);
   j1=j1-weight[i];
  }
 }
}
void main()
{
 int i,j;

 printf("\n Enter number of Object:");
 scanf("%d",&no);
 for(i=1;i<=no;i++)
 {
  printf("\n Enter Weight and profit for Object %d\n",i);
  scanf("%d %d",&weight[i],&profit[i]);
 }
 printf("\n Enter knapsack Capacity:");
 scanf("%d",&W);

 knapsackDP(no,W);
 backtracking();

}
